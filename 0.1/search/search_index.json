{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"OPDX Specification","text":"<p>Welcome to the Open Profile Data Exchange (OPDX) protocol specification!</p>"},{"location":"#what-is-opdx","title":"What is OPDX?","text":"<p>OPDX (Open Profile Data Exchange) is a decentralized protocol for retrieving public profile data (such as avatars) associated with an email address. The protocol allows email providers and self-hosted instances to expose profile data in a standardized way, without relying on a centralized service, like Gravatar.</p>"},{"location":"#design-principles","title":"Design Principles","text":"<ol> <li>Open &amp; Decentralized \u2013 Anyone can build and host an OPDX-compatible instance. Which server, framework or language to use is completly in the hands of developers, as long as the instance complies with the OPDX specification.</li> <li>Privacy-Conscious \u2013 No authentication required. Rate-limiting and caching are optional, but should be considered.</li> <li>DNS-Based Discovery \u2013 Clients discover OPDX servers using a simple TXT record. There is no need for a central instance or directory of instances.</li> <li>Minimal &amp; Lightweight \u2013 The protocol mandates simple REST API requests and responses using a standardized JSON format.</li> </ol>"},{"location":"#features","title":"Features","text":"<ul> <li>\ud83d\udd13 Open &amp; decentralized</li> <li>\ud83e\udd2b Privacy-focused</li> <li>\ud83c\udf0e Compatible with multiple providers</li> </ul> <p>Get Started \u2192</p>"},{"location":"contributing/","title":"Contributing","text":""},{"location":"faq/","title":"Frequently Asked Questions","text":""},{"location":"overview/","title":"OPDX Protocol Overview","text":"<p>OPDX is designed with privacy and interoperability in mind, allowing users to control the visibility of their profile data while enabling a broad ecosystem of services to access it securely.</p>"},{"location":"overview/#use-cases","title":"Use Cases","text":"<ul> <li>Avatar &amp; Profile Retrieval: Services can display user avatars or other profile information associated with an email address (similar to how Gravatar works).</li> <li>Cross-Service Identity: OPDX can be used to centralize profile information across different services, allowing seamless integration without needing to re-enter personal details.</li> </ul>"},{"location":"overview/#quick-start-guide","title":"Quick Start Guide","text":"<p>If you're a developer looking to integrate OPDX into your application, there are two main areas to focus on:</p>"},{"location":"overview/#1-client-side-implementation","title":"1. Client-Side Implementation","text":"<p>The client-side is responsible for fetching and displaying profile data from an OPDX-compatible API (hosted by the email provider or service). You\u2019ll typically use the user's email address (hashed for privacy) to make the request and display the profile information in your app.</p> <p>Getting Started:    - Client-Side Integration      Learn how to retrieve user profile data and handle the response using OPDX endpoints.</p>"},{"location":"overview/#2-server-side-implementation","title":"2. Server-Side Implementation","text":"<p>On the server side, you'll need to implement an OPDX-compatible API that serves profile data based on an email address. This involves exposing the data through HTTP endpoints, supporting authentication (if necessary), and respecting privacy settings.</p> <p>Getting Started:    - Server-Side Integration      Learn how to implement the OPDX API, including setting up endpoints, security measures, and privacy controls.</p>"},{"location":"overview/#protocol-flow","title":"Protocol Flow","text":""},{"location":"overview/#1-client-request","title":"1. Client Request","text":"<ul> <li>The client queries the OPDX DNS delegation record to find the base URL for the ODPX-compatible service</li> <li>The client queries the OPDX-compatible service using a hashed version of the email address (to protect user privacy).</li> <li>The server responds with the associated profile data, including optional fields like name, avatar URL, and additional metadata.</li> </ul>"},{"location":"overview/#2-data-structure","title":"2. Data Structure","text":"<ul> <li>The response follows a standardized JSON format, with required and optional fields for profile data.</li> <li>You can extend this format with custom fields, as long as they follow the OPDX guidelines.</li> </ul> <p>Documentation:    - OPDX Profile Data Format</p>"},{"location":"overview/#3-security-privacy","title":"3. Security &amp; Privacy","text":"<ul> <li>Data access is controlled by CORS policies and, when necessary, authentication mechanisms like API keys or OAuth tokens.</li> <li>Users can configure the visibility of their data through the API, with clear mechanisms for opting in or out.</li> </ul> <p>Documentation:    - Security Considerations    - Privacy Settings &amp; Authentication</p>"},{"location":"overview/#getting-help","title":"Getting Help","text":"<p>If you have any questions or need further assistance, you can reach out through our community forums or contribute to the documentation.</p> <ul> <li>GitHub Discussions: Discuss on GitHub</li> <li>Contributing: How to Contribute</li> </ul> <p>We hope you\u2019re excited to start implementing OPDX and join the growing ecosystem of interoperable services!</p>"},{"location":"api/introduction/","title":"Introduction","text":""},{"location":"api/reference/","title":"Reference","text":""},{"location":"api/security/","title":"Security","text":""}]}